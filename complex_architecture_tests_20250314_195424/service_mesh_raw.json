{
  "diagram_type": "software_architecture",
  "syntax": "Here's a JSON representation of a service mesh architecture using Istio:\n\n```json\n{\n    \"type\": \"software_architecture\",\n    \"title\": \"Service Mesh Architecture\",\n    \"nodes\": [\n        {\n            \"id\": \"istio-pilot\",\n            \"label\": \"Istio Pilot\",\n            \"type\": \"control_plane\",\n            \"description\": \"Manages data plane services and provides service discovery\",\n            \"technology\": \"Istio\"\n        },\n        {\n            \"id\": \"istio-citadel\",\n            \"label\": \"Istio Citadel\",\n            \"type\": \"security\",\n            \"description\": \"Provides identity and access control for the mesh\",\n            \"technology\": \"Istio\"\n        },\n        {\n            \"id\": \"istio-galley\",\n            \"label\": \"Istio Galley\",\n            \"type\": \"control_plane\",\n            \"description\": \"Handles configuration validation and distribution\",\n            \"technology\": \"Istio\"\n        },\n        {\n            \"id\": \"istio-sidecar\",\n            \"label\": \"Istio Sidecar\",\n            \"type\": \"infrastructure\",\n            \"description\": \"Intercepts and manages traffic for each service instance\",\n            \"technology\": \"Istio\"\n        },\n        {\n            \"id\": \"service-a\",\n            \"label\": \"Service A\",\n            \"type\": \"backend_service\",\n            \"description\": \"First service in the data plane\",\n            \"technology\": \"gRPC\"\n        },\n        {\n            \"id\": \"service-b\",\n            \"label\": \"Service B\",\n            \"type\": \"backend_service\",\n            \"description\": \"Second service in the data plane\",\n            \"technology\": \"REST\"\n        },\n        {\n            \"id\": \"service-c\",\n            \"label\": \"Service C\",\n            \"type\": \"backend_service\",\n            \"description\": \"Third service in the data plane\",\n            \"technology\": \"gRPC\"\n        },\n        {\n            \"id\": \"envoy\",\n            \"label\": \"Envoy\",\n            \"type\": \"infrastructure\",\n            \"description\": \"Intercepts and manages traffic for each service instance\",\n            \"technology\": \"Envoy\"\n        }\n    ],\n    \"connections\": [\n        {\n            \"from\": \"istio-pilot\",\n            \"to\": \"istio-sidecar\",\n            \"label\": \"Service discovery\",\n            \"type\": \"service_discovery\",\n            \"protocol\": \"gRPC\"\n        },\n        {\n            \"from\": \"istio-citadel\",\n            \"to\": \"istio-sidecar\",\n            \"label\": \"Identity and access control\",\n            \"type\": \"authentication\",\n            \"protocol\": \"mTLS\"\n        },\n        {\n            \"from\": \"istio-galley\",\n            \"to\": \"istio-sidecar\",\n            \"label\": \"Configuration distribution\",\n            \"type\": \"configuration\",\n            \"protocol\": \"gRPC\"\n        },\n        {\n            \"from\": \"istio-sidecar\",\n            \"to\": \"envoy\",\n            \"label\": \"Intercepts and manages traffic\",\n            \"type\": \"data_plane\",\n            \"protocol\": \"HTTP/2\"\n        },\n        {\n            \"from\": \"service-a\",\n            \"to\": \"service-b\",\n            \"label\": \"Service-to-service communication\",\n            \"type\": \"api_call\",\n            \"protocol\": \"HTTP/2\"\n        },\n        {\n            \"from\": \"service-b\",\n            \"to\": \"service-c\",\n            \"label\": \"Service-to-service communication\",\n            \"type\": \"api_call\",\n            \"protocol\": \"HTTP/2\"\n        }\n    ],\n    \"clusters\": [\n        {\n            \"id\": \"data_plane\",\n            \"label\": \"Data Plane\",\n            \"nodes\": [\"service-a\", \"service-b\", \"service-c\", \"istio-sidecar\", \"envoy\"]\n        },\n        {\n            \"id\": \"control_plane\",\n            \"label\": \"Control Plane\",\n            \"nodes\": [\"istio-pilot\", \"istio-citadel\", \"istio-galley\"]\n        }\n    ],\n    \"styles\": {\n        \"istio-pilot\": {\"color\": \"#0072C6\", \"shape\": \"ellipse\", \"border\": \"solid\"},\n        \"istio-citadel\": {\"color\": \"#0072C6\", \"shape\": \"ellipse\", \"border\": \"solid\"},\n        \"istio-galley\": {\"color\": \"#0072C6\", \"shape\": \"ellipse\", \"border\": \"solid\"},\n        \"istio-sidecar\": {\"color\": \"#D22128\", \"shape\": \"rectangle\", \"border\": \"dashed\"},\n        \"service-a\": {\"color\": \"#FFC107\", \"shape\": \"rectangle\", \"border\": \"solid\"},\n        \"service-b\": {\"color\": \"#4CAF50\", \"shape\": \"rectangle\",\n```",
  "description": "This diagram represents a service mesh architecture using Istio, which includes control plane components like Istio Pilot, Istio Citadel, and Istio Galley, data plane components like Istio Sidecar and Envoy for intercepting and managing traffic, and backend services like Service A, Service B, and Service C, with connections representing service discovery, identity and access control, configuration distribution, and service-to-service communication using various protocols.",
  "metadata": {
    "options": {},
    "model": "mixtral-8x7b-32768",
    "tokens": 1820
  },
  "raw_structure": null,
  "nodes": null,
  "connections": null,
  "clusters": null
}