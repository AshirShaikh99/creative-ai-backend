{
  "diagram_type": "software_architecture",
  "syntax": "Here's a JSON representation of a software architecture diagram following your specifications. This architecture shows an API Gateway pattern with authentication, rate limiting, and service routing.\n\n```json\n{\n    \"type\": \"software_architecture\",\n    \"title\": \"API Gateway Pattern\",\n    \"nodes\": [\n        {\n            \"id\": \"api_gateway\",\n            \"label\": \"API Gateway\",\n            \"type\": \"infrastructure\",\n            \"description\": \"Handles authentication, rate limiting, and service routing\",\n            \"technology\": \"Nginx/Envoy/Kong\"\n        },\n        {\n            \"id\": \"ui\",\n            \"label\": \"User Interface\",\n            \"type\": \"frontend\",\n            \"description\": \"Provides user interaction and data visualization\",\n            \"technology\": \"React/Angular/Vue\"\n        },\n        {\n            \"id\": \"client_lib\",\n            \"label\": \"Client Library\",\n            \"type\": \"frontend\",\n            \"description\": \"Facilitates communication between UI and backend services\",\n            \"technology\": \"JavaScript/TypeScript\"\n        },\n        {\n            \"id\": \"auth_service\",\n            \"label\": \"Authentication Service\",\n            \"type\": \"backend\",\n            \"description\": \"Manages user authentication and authorization\",\n            \"technology\": \"OAuth/OpenID Connect\"\n        },\n        {\n            \"id\": \"rate_limiter\",\n            \"label\": \"Rate Limiter\",\n            \"type\": \"infrastructure\",\n            \"description\": \"Implements rate limiting for API requests\",\n            \"technology\": \"Nginx/Envoy/HAProxy\"\n        },\n        {\n            \"id\": \"user_service\",\n            \"label\": \"User Service\",\n            \"type\": \"backend\",\n            \"description\": \"Handles user-related operations\",\n            \"technology\": \"Node.js/Python/Java\"\n        },\n        {\n            \"id\": \"product_service\",\n            \"label\": \"Product Service\",\n            \"type\": \"backend\",\n            \"description\": \"Manages product-related operations\",\n            \"technology\": \"Node.js/Python/Java\"\n        },\n        {\n            \"id\": \"order_service\",\n            \"label\": \"Order Service\",\n            \"type\": \"backend\",\n            \"description\": \"Processes orders and order-related events\",\n            \"technology\": \"Node.js/Python/Java\"\n        },\n        {\n            \"id\": \"postgres\",\n            \"label\": \"PostgreSQL\",\n            \"type\": \"database\",\n            \"description\": \"Relational database for storing user, product, and order data\",\n            \"technology\": \"PostgreSQL\"\n        },\n        {\n            \"id\": \"redis\",\n            \"label\": \"Redis\",\n            \"type\": \"database\",\n            \"description\": \"In-memory data store for caching and message queues\",\n            \"technology\": \"Redis\"\n        },\n        {\n            \"id\": \"kafka\",\n            \"label\": \"Kafka\",\n            \"type\": \"infrastructure\",\n            \"description\": \"Distributed streaming platform for event-driven communication\",\n            \"technology\": \"Apache Kafka\"\n        }\n    ],\n    \"connections\": [\n        {\n            \"from\": \"ui\",\n            \"to\": \"api_gateway\",\n            \"label\": \"API calls\",\n            \"type\": \"api\",\n            \"protocol\": \"HTTP\"\n        },\n        {\n            \"from\": \"client_lib\",\n            \"to\": \"api_gateway\",\n            \"label\": \"API calls\",\n            \"type\": \"api\",\n            \"protocol\": \"HTTP\"\n        },\n        {\n            \"from\": \"api_gateway\",\n            \"to\": \"auth_service\",\n            \"label\": \"Authentication flow\",\n            \"type\": \"auth\",\n            \"protocol\": \"OAuth\"\n        },\n        {\n            \"from\": \"api_gateway\",\n            \"to\": \"rate_limiter\",\n            \"label\": \"Rate limiting\",\n            \"type\": \"rate_limit\",\n            \"protocol\": \"HTTP\"\n        },\n        {\n            \"from\": \"api_gateway\",\n            \"to\": \"user_service\",\n            \"label\": \"Service routing\",\n            \"type\": \"service_route\",\n            \"protocol\": \"HTTP\"\n        },\n        {\n            \"from\": \"api_gateway\",\n            \"to\": \"product_service\",\n            \"label\": \"Service routing\",\n            \"type\": \"service_route\",\n            \"protocol\": \"HTTP\"\n        },\n        {\n            \"from\": \"api_gateway\",\n            \"to\": \"order_service\",\n            \"label\": \"Service routing\",\n            \"type\": \"service_route\",\n            \"protocol\": \"HTTP\"\n        },\n        {\n            \"from\": \"user_service\",\n            \"to\": \"postgres\",\n            \"label\": \"Database queries\",\n            \"type\": \"db\",\n            \"protocol\": \"PostgreSQL\"\n        },\n        {\n            \"from\": \"product_service\",\n            \"to\": \"postgres\",\n            \"label\": \"Database queries\",\n            \"type\": \"db\",\n            \"protocol\": \"PostgreSQL\"\n        },\n        {\n            \"from\": \"order_service\",\n            \"to\": \"postgres\",\n            \"label\": \"Database queries\",\n            \"type\": \"db\",\n            \"protocol\": \"PostgreSQL\"\n        },\n        {\n            \"from\": \"user_service\",\n            \"to\": \"redis\",\n            \"label\": \"Data transformations\",\n            \"type\": \"data_transform\",\n            \"protocol\": \"Redis\"\n        },\n        {\n            \"from\": \"product_service\",\n            \"to\": \"redis\",\n            \"label\": \"Data transformations\",\n            \"type\": \"data_transform\",\n            \"protocol\": \"Redis\"\n        },\n        {\n            \"from\": \"order_service\",\n            \"to\": \"redis\",\n            \"label\": \"Data transformations\",\n            \"type\": \"data_transform\",\n            \"protocol\": \"Redis\"\n        },\n        {\n            \"from\": \"user_service\",\n            \"to\": \"kafka\",\n            \"label\": \"Event flows\",\n            \"type\": \"event\",\n            \"protocol\": \"Kafka\"\n        },\n        {\n            \"from\": \"product_service\",\n            \"to\": \"kafka\",\n            \"label\": \"Event flows\",\n            \"type\": \"event\",\n            \"protocol\": \"Kafka\"\n        },\n        {\n            \"from\": \"order_service\",\n            \"to\": \"kafka\",\n            \"label\": \"Event flows\",\n            \"type\": \"event\",\n            \"protocol\": \"Kafka\"\n        }\n    ],\n    \"clusters\": [\n        {\n            \"id\": \"frontend\",\n            \"label\": \"Frontend\",\n            \"nodes\": [\"ui\", \"client_lib\"]\n        },\n        {\n            \"id\": \"backend\",\n            \"label\": \"Backend\",\n            \"nodes\": [\"auth_service\", \"user_service\", \"product_service\", \"order_service\"]\n        },\n        {\n            \"id\": \"data\",\n            \"label\": \"Data\",\n            \"nodes\": [\"postgres\", \"redis\"]\n        },\n        {\n            \"id\": \"infrastructure\",\n            \"label\": \"Infrastructure\",\n            \"nodes\": [\"api_gateway\", \"rate_limiter\", \"kafka\"]\n        }\n    ],\n    \"styles\": {\n        \"api_gateway\": {\n            \"color\": \"#FFC107\",\n            \"shape\": \"rectangle\",\n            \"border\": \"double\"\n        },\n        \"ui\": {\n            \"color\": \"#2196F3\",\n            \"shape\": \"rectangle\",\n            \"border\": \"single\"\n        },\n        \"client_lib\": {\n            \"color\": \"#00BCD4\",\n            \"shape\": \"rectangle\",\n            \"border\": \"dashed\"\n        },\n        \"auth_service\": {\n            \"color\": \"#9C27B0\",\n            \"shape\": \"rectangle\",\n            \"border\": \"single\"\n        },\n        \"rate_limiter\": {\n            \"color\": \"#E91E63\",\n            \"shape\": \"rectangle\",\n            \"border\": \"dotted\"\n        },\n        \"user_service\": {\n            \"color\": \"#009688\",\n            \"shape\": \"rectangle\",\n            \"border\": \"single\"\n        },\n        \"product_service\": {\n            \"color\": \"#4CAF50\",\n            \"shape\": \"rectangle\",\n            \"border\": \"single\"\n        },\n        \"order_service\": {\n            \"color\": \"#3F51B5\",\n            \"shape\": \"rectangle\",\n            \"border\": \"single\"\n        },\n        \"postgres\": {\n            \"color\": \"#4ECDC4\",\n            \"shape\": \"database\",\n            \"border\": \"single\"\n        },\n        \"redis\": {\n            \"color\": \"#9E9E9E\",\n            \"shape\": \"database\",\n            \"border\": \"single\"\n        },\n        \"kafka\": {\n            \"color\": \"#303F9F\",\n            \"shape\": \"cloud\",\n            \"border\": \"single\"\n        }\n    }\n}\n```\n\nThis architecture diagram includes an API Gateway pattern with authentication, rate limiting, and service routing. The API Gateway communicates with various backend services, databases, and infrastructure components. Each component is grouped into clusters by layer and technology stack. The JSON format provides a structured way to represent complex software architecture diagrams.",
  "description": "This software architecture diagram represents an API Gateway pattern with authentication, rate limiting, and service routing, encompassing frontend, backend, data, and infrastructure clusters, and utilizing technologies like Nginx, React, PostgreSQL, and Kafka.",
  "metadata": {
    "options": {},
    "model": "mixtral-8x7b-32768",
    "tokens": 2894
  },
  "raw_structure": null,
  "nodes": null,
  "connections": null,
  "clusters": null
}